#可视化视图分为4类：比较、联系、构成和分布
'''
比较：数据间各类别的关系，或他们随时间的变化趋势————折线图
联系：查看两个或两个以上变量之间的关系————散点图
构成：每个部分占整体/随时间变化的百分比————饼图
分布：关注每个变量。或多个变量的分布情况————直方图
'''

'''
#散点图
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns
#数据准备
N = 1000
x = np.random.randn(N)
y = np.random.randn(N)
#用matplotlib画散点图
plt.scatter(x,y,marker='x')
plt.show()
#用seaborn画散点图
df = pd.DataFrame({'x':x,'y':y})
sns.jointplot(x="x",y="y",data=df,kind='scatter');
plt.show()
'''


'''
#折线图
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns
#数据准备
x = [2010,2011,2012,2013,2014,2015,2016,2017,2018,2019]
y = [5,3,6,20,17,16,19,30,32,35]
#使用matplotlib画折线图
plt.plot(x,y)
plt.show()
#使用seaborn画折线图
df = pd.DataFrame({'x':x,'y':y})
sns.lineplot(x="x",y="y",data=df)
plt.show()
'''


'''
#直方图
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns
#数据准备
a = np.random.randn(100)
s = pd.Series(a)
#使用matplotlib画直方图
plt.hist(s)
plt.show()
#使用seaborn画直方图
sns.distplot(s,kde=False)
plt.show()
sns.distplot(s,kde=True)
plt.show()
'''


'''
#条形图————查看类别的特征
import matplotlib.pyplot as plt
import seaborn as sns
#数据准备
x = ['Cat1','Cat2','Cat3','Cat4','Cat5']
y = [5,4,8,12,7]
#使用matplotlib画条形图
plt.bar(x,y)
plt.show()
#使用seaborn画条形图
sns.barplot(x,y)
plt.show()
'''


'''
#箱线图————由五个数值点组成：最大值、最小值、上下四分位数、中位数。有时会出现异常值
#可以分析出数据的差异性、离散程度和异常值等。
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns
#数据准备
#生成10*4维度数据
data = np.random.normal(size=(10,4))
lables = ['A','B','C','D']
#使用matplotlib画箱线图
plt.boxplot(data,labels=lables)
plt.show()
#使用seaborn画箱线图
df = pd.DataFrame(data,columns=lables)
sns.boxplot(data=df)
plt.show()
'''


'''
#饼图
import matplotlib.pyplot as plt
nums = [25,37,33,37,6]
labels = ['High-school','Bachelor','Master','Ph.d','Others']
#使用matplotlib画饼图
plt.pie(x=nums,labels=labels)
plt.show()
'''


'''
#热力图————多元变量分析法
#颜色越浅，代表乘客数量越多
import seaborn as sns
import matplotlib.pyplot as plt
#数据准备
flights = sns.load_dataset("flights")
data = flights.pivot('year','month','passengers')
#使用seaborn画热力图
sns.heatmap(data)
plt.show()
'''


'''
#蜘蛛图
import matplotlib.pyplot as plt
import numpy as np
from matplotlib.font_manager import FontProperties
labels = np.array([u"推进","KDA",u"生存",u"团战",u"发育",u"输出"])
stats = [83,61,95,67,76,88]
#角度、状态值
angles = np.linspace(0,2*np.pi,len(labels),endpoint=False)
stats = np.concatenate((stats,[stats[0]]))
angles = np.concatenate((angles,[angles[0]]))
fig = plt.figure()
ax = fig.add_subplot(111,polar = True)
ax.plot(angles,stats,'o-',linewidth=2)
ax.fill(angles,stats,alpha=0.25)
#设置中文字体
font = FontProperties(fname = r'C:\Windows\Fonts\simfang.ttf',size=14)
ax.set_thetagrids(angles*180/np.pi,labels,FontProperties=font)
plt.show()
'''


'''
#二元变量分布————两个变量之间的关系
import matplotlib.pyplot as plt
import seaborn as sns
tips = sns.load_dataset("tips")
print(tips.head(10))
sns.jointplot(x="total_bill",y="tip",data=tips,kind='scatter')
sns.jointplot(x="total_bill",y="tip",data=tips,kind='kde')
sns.jointplot(x="total_bill",y="tip",data=tips,kind='hex')
plt.show()
'''


'''
#成对关系————多个成对双变量分布
import matplotlib.pyplot as plt
import seaborn as sns
iris = sns.load_dataset('iris')
sns.pairplot(iris)
plt.show()
'''

#模拟企业隐患数据分析
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns
#定义生成隐患数量函数
def GenerateHDNum(hdtimes):
    #hdtimes表示要生成多少隐患数量
    HD_NumList = list(pd.Series(np.random.rand(hdtimes)))
    return [int(x*100) for x in HD_NumList]
#数据准备函数
def MakeData():
    #创建以月份为单位的时间索引
    dti = pd.date_range(start='2017-01-01',end='2018-12-31',freq='M')
    monthlist = [str(x*100 + y) for x,y in zip(dti.year,dti.month)]
    hdtimes = len(monthlist)
    #生成各种隐患数量
    NormalHD = GenerateHDNum(hdtimes)
    ImportHD = GenerateHDNum(hdtimes)
    HDNum = {'Normal':NormalHD,'Import':ImportHD}
    HD_Frame = pd.DataFrame(data=HDNum,index=monthlist)
    print(HD_Frame)
    return HD_Frame
def AnalyData(HDSet,AnalyType='0'):
    #成对关系图
    if AnalyType == '1':
        sns.pairplot(HDSet)
    if AnalyType == '2':
        sns.jointplot(x='Normal',y='Import',data=HDSet,kind='scatter')
    if AnalyType == '3':
        sns.jointplot(x='Normal',y='Import',data=HDSet,kind='kde')
    if AnalyType == '4':
        sns.jointplot(x='Normal',y='Import',data=HDSet,kind='hex')
    plt.show()
def ShowMenu():
    print('='*20)
    print('1.显示成对关系图')
    print('2.显示散点图')
    print('3.显示核密度图')
    print('4.显示Hexbin图')
    print('R.换一批数据')
    print('0.退出')
    print('='*20)
    return input('输入命令：')
def main():
    HDSet = MakeData()
    while True:
        command = ShowMenu()
        if command == '0':
            break
        elif command == 'R':
            HDSet = MakeData()
        else:
            AnalyData(HDSet,command)
main()
